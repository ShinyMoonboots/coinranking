# ********************************************************************************************************************************************************************************************************************************************************
# IMPORTS
# ********************************************************************************************************************************************************************************************************************************************************
from gevent import monkey

monkey.patch_all()

from server import app
from views import main

# --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# LOGGING
# --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

import logging, logging.config

logging.basicConfig(
    handlers=[logging.FileHandler("app.log"), logging.StreamHandler()],
    format="%(asctime)s - %(levelname)s - %(filename)s - %(process)d - %(name)s - %(funcName)s - line: %(lineno)d - %(message)s",
    level=logging.INFO,
)

# --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# DASH
# --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

from dash import dcc, html
import dash_bootstrap_components as dbc
from dash.exceptions import PreventUpdate
from dash.dependencies import Input, Output, State, ClientsideFunction

# ********************************************************************************************************************************************************************************************************************************************************
# USER INTERFACE
# ********************************************************************************************************************************************************************************************************************************************************

# --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Configuring Dash app for returning initial empty layout (welcome screen)
# --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

app.layout = dbc.Container(
    [        
        dcc.Loading(
            id="loading-1",
            type="default",
            children=[html.Div(id="centeredPageContent"),dcc.Interval(id="mainTimer", interval=60*10 * 1000, disabled=False)],
        ),
        dcc.Location(id="url", refresh=True),
        dcc.Location(id="url2", refresh=True),
        html.Div(id="urlControl", style={"display": "none"}),
    ],
    id="outerPageContent",
    className="px-0",
    fluid=True,
)

app.title = "CoinsRanker"

# --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Handler to process various routes and redirects
# --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
@app.callback([Output("centeredPageContent", "children"), Output("urlControl", "children")], [Input("url", "pathname"), Input("mainTimer", "n_intervals")])
def display_page(current_page, n_intervals):
    return main.layout(), current_page

@app.callback(Output("url2", "pathname"), [Input("urlControl", "children")], [State("url", "pathname")])
def change_page(target_page, current_page):
    # print('target_page=%s,current_page=%s' % (target_page,current_page))
    if target_page != current_page:
        # print('going to %s' % target_page)
        return target_page
    else:
        # print('doing nothing')
        raise PreventUpdate()


# --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Start serving requests
# --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

if __name__ == "__main__":

    app.run_server(debug=False)
